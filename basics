g = "Mary had a little lamb Little lamb, little lamb Mary had a little lamb \
Its fleece was white as snow And everywhere that Mary went Mary went, Mary went \
Everywhere that Mary went The lamb was sure to go"

g.find("snow")

95


A = [1, 'a']
B = [2, 1, 'd']
A + B

[1, 'a', 2, 1, 'd']

a_list = [1, "hello", [1,2,3], True ]
a_list

[1, 'hello', [1, 2, 3], True]

a_list[1]

'hello'

a_list[1:4]

['hello', [1, 2, 3], True]



C_tuple=(-5, 1, -3)
C_sorted = sorted(C_tuple)
C_sorted

[-5, -3, 1]

genres_tuple = ("pop", "rock", "soul", "hard rock", "soft rock", \
                "R&B", "progressive rock", "disco") 
genres_tuple

('pop',
 'rock',
 'soul',
 'hard rock',
 'soft rock',
 'R&B',
 'progressive rock',
 'disco')
 
 len(genres_tuple)
 8
 
 genres_tuple[3]
 
 'hard rock'
 
 
 "Hello Mike".split()
 
 ["Hello","Mike"]
 
 Correct. The method split separates a string into a list based on the argument. If there is no argument as in this case the string is split using spaces.
 
 A = [1] after the following operation: A.append([2,3,4,5])
 
 2
 
 Correct: Correct. Append only adds one element to the list.
 
 
 soundtrack_dic = {"The Bodyguard":"1992", "Saturday Night Fever":"1977"}
soundtrack_dic 

soundtrack_dic.keys()

album_sales_dict = {'Back in Black':50, 'The Bodyguard':50, 'Thriller':65}
album_sales_dict

album_sales_dict['Thriller']

65

album_sales_dict.keys()

dict_keys(['Back in Black', 'The Bodyguard', 'Thriller'])

album_sales_dict.values()

dict_values([50, 50, 65])

intersection = album_set1 & album_set2 
Intersection 
 
album_set1.difference(album_set2) 
{'Thriller'} 
album_set1.intersection(album_set2) 
{'AC/DC', 'Back in Black'} 
album_set1.union(album_set2) 
{'AC/DC', 'Back in Black', 'The Dark Side of the Moon', 'Thriller'} 
All 
 
set(album_set1).issuperset(album_set2)   
False 
 
set(album_set2).issubset(album_set1) 
False 
 
music_list = ['rap','house','electronic music', 'rap'] 
music_set = set(music_list) 
music_set 
 
album_set1 = set(["Thriller", 'AC/DC', 'Back in Black']) 
album_set2 = set([ "AC/DC", "Back in Black", "The Dark Side of the Moon"]) 
album_set3 = album_set1.union(album_set2) 
album_set3 
 
Find out if album_set1 is a subset of album_set3: 
set(album_set1).issubset(album_set3) 
 
